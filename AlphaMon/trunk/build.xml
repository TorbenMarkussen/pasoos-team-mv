<project name="HotGammon" default="test" basedir=".">
    <property name="build.home" value="${basedir}/build"/>
    <property name="src.home" value="${basedir}/src"/>
    <property name="test.home" value="${basedir}/test"/>
    <property name="reports" value="${basedir}/reports"/>
    <property name="junit-jar" value="${basedir}/lib/junit-4.10.jar"/>
    <property name="minidraw-jar" value="${basedir}/lib/minidraw.jar"/>
    <property name="mockito-jar" value="${basedir}/lib/mockito-1.9.0/mockito-all-1.9.0.jar"/>
    <property name="doc.home" value="${basedir}/doc"/>
    <property name="resource" value="resource"/>
    <property name="deploy" value="${basedir}/deploy"/>
    <property name="jarname" value="hotgammon.jar"/>

    <path id="classpath">
        <pathelement location="${junit-jar}"/>
        <pathelement location="${mockito-jar}"/>
        <pathelement location="${minidraw-jar}"/>
    </path>

    <target name="prepare" depends="clean">
        <mkdir dir="${build.home}"/>
        <mkdir dir="${build.home}/classes"/>
        <mkdir dir="${build.home}/test_classes"/>
        <mkdir dir="${doc.home}"/>
        <mkdir dir="${reports}"/>
    </target>

    <target name="clean">
        <delete dir="${build.home}"/>
        <delete dir="${doc.home}"/>
        <delete dir="${reports}"/>
    </target>

    <target name="compile" depends="prepare, copy_resource, depends">
        <javac srcdir="${src.home}" destdir="${build.home}/classes" includeantruntime="false">
            <classpath>
                <path refid="classpath"/>
            </classpath>
        </javac>
    </target>
    <target name="copy_resource" depends="prepare">
        <copy todir="${build.home}/classes/resource">
            <fileset dir="${resource}">
                <include name="*.gif"/>
                <include name="*.wav"/>
            </fileset>
        </copy>
    </target>
    <target name="run">
        <java fork="yes" classname="pasoos.hotgammon.animatedgame.Hotgammon" spawn="yes">
            <classpath>
                <path refid="classpath"/>
                <pathelement location="${build.home}/classes"/>
            </classpath>
            <sysproperty key="black_type" value="AIPlayer"/>
            <sysproperty key="red_type" value="DummyPlayer"/>
            <sysproperty key="black_name" value="Gerry"/>
            <sysproperty key="red_name" value="T6"/>
        </java>
    </target>
    <target name="run_simple">
        <java fork="yes" classname="pasoos.hotgammon.simplegame.SimpleGammon" spawn="yes">
            <classpath>
                <path refid="classpath"/>
                <pathelement location="${build.home}/classes"/>
            </classpath>
            <sysproperty key="black_type" value="ManualPlayer"/>
            <sysproperty key="red_type" value="ManualPlayer"/>
            <sysproperty key="black_name" value="Black Player"/>
            <sysproperty key="red_name" value="Red Player"/>
        </java>
    </target>
    <target name="run_5">
        <antcall target="run"/>
        <antcall target="run"/>
        <antcall target="run"/>
        <antcall target="run"/>
        <antcall target="run"/>
    </target>
    <target name="run_10">
        <antcall target="run_5"/>
        <antcall target="run_5"/>
    </target>
    <target name="run_20">
        <antcall target="run_10"/>
        <antcall target="run_10"/>
    </target>
    <target name="compile_test" depends="compile">
        <javac srcdir="${test.home}" destdir="${build.home}/test_classes" includeantruntime="false">
            <classpath>
                <path refid="classpath"/>
                <pathelement location="${build.home}/classes"/>
            </classpath>
        </javac>
    </target>

    <target name="test" depends="compile_test">
        <junit printsummary="on" haltonfailure="yes">
            <classpath>
                <path refid="classpath"/>
                <pathelement location="${build.home}/classes"/>
                <pathelement location="${build.home}/test_classes"/>
            </classpath>
            <batchtest todir="${reports}">
                <fileset dir="${test.home}">
                    <include name="**/*Test.java"/>
                    <include name="**/Test*.java"/>
                </fileset>
            </batchtest>
            <formatter type="xml"/>
        </junit>
        <junitreport todir="${reports}">
            <fileset dir="${reports}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report todir="${reports}"/>
        </junitreport>
    </target>

    <target name="javadoc" depends="prepare">
        <javadoc sourcepath="${src.home}" destdir="${doc.home}" windowtitle="Hotgammon full documentation">
            <fileset dir="${src.home}">
                <include name="*.java"/>
            </fileset>
        </javadoc>
    </target>

    <target name="depends">
        <ant dir="${basedir}/../MiniDraw" target="jar" inheritAll="false"/>
        <copy todir="${basedir}/lib">
            <fileset dir="${basedir}/../MiniDraw/deploy"/>
        </copy>
    </target>

    <target name="mkdir_deploy">
        <mkdir dir="${deploy}"></mkdir>
    </target>

    <target name="jar" depends="clean, mkdir_deploy, compile">
        <jar jarfile="${deploy}/${jarname}" basedir="${build.home}/classes"/>
        <copy todir="${deploy}">
            <fileset dir="${basedir}/../MiniDraw/deploy"/>
        </copy>
    </target>

</project>