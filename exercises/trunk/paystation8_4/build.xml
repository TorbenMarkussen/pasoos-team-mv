<!-- Build file for the Pay Station case study

   This source code is from the book 
     "Flexible, Reliable Software:
       Using Patterns and Agile Development"
     published 2010 by CRC Press.
   Author: 
     Henrik B Christensen 
     Computer Science Department
     Aarhus University
   
   This source code is provided WITHOUT ANY WARRANTY either 
   expressed or implied. You may study, use, modify, and 
   distribute it for non-commercial purposes. For any 
   commercial use, see http://www.baerbak.com/
-->
<project name="PayStation" default="help" basedir=".">
    
  <property name="source-directory" value="src"/>
  <property name="test-source-directory" value="test"/>
  <property name="build-directory" value="build"/>
  <property name="javadoc-directory" value="javadoc"/>

  <property name="junit-jar" value="lib/junit-4.4.jar"/>

  <path id="class-path">
    <pathelement location="${build-directory}"/>
    <pathelement location="${junit-jar}"/>
  </path>

  <target name="help">
    <echo>
Pay station build management.
  Targets:
    build-src: Builds production code.
    test:      JUnit test production code.
    clean:     Removes all bytecode.
    javadoc:   Generate JavaDoc.

   This source code is from the book 
     "Flexible, Reliable Software:
       Using Patterns and Agile Development"
     published 2010 by CRC Press.
   Author: 
     Henrik B Christensen 
     Computer Science Department
     Aarhus University
   
   This source code is provided WITHOUT ANY WARRANTY either 
   expressed or implied. You may study, use, modify, and 
   distribute it for non-commercial purposes. For any 
   commercial use, see http://www.baerbak.com/
    </echo>
  </target>

  <target name="clean">
    <delete dir="${build-directory}"/>
    <delete dir="${javadoc-directory}"/>
  </target>

  <target name="prepare">
    <mkdir dir="${build-directory}"/>
    <mkdir dir="${javadoc-directory}"/>
  </target>

  <target name="build-src" depends="prepare">
    <javac srcdir="${source-directory}"
      destdir="${build-directory}">
      <classpath refid="class-path"/>
    </javac>
  </target>

  <target name="build-test" depends="build-src">
    <javac srcdir="${test-source-directory}"
      destdir="${build-directory}">
      <classpath refid="class-path"/>
    </javac>
  </target>

  <target name="build-all" depends="build-src,build-test"/>
  
  <target name="test"  depends="build-all">
    <java classname="org.junit.runner.JUnitCore">
      <arg value="paystation.domain.TestAll"/>
      <classpath refid="class-path"/>
    </java>
  </target>

  <target name="javadoc" depends="prepare">
    <javadoc
      packagenames="paystation.*"
      destdir="${javadoc-directory}"
      sourcepath="${source-directory}"
      windowtitle="Pay station system">
      
      <classpath refid="class-path"/>
    </javadoc>
  </target>
  
</project>
